[project]
name = "pyelastica"
version = "1.0.0"
description = "Elastica is a software to simulate the dynamics of filaments that, at every cross-section, can undergo all six possible modes of deformation, allowing the filament to bend, twist, stretch and shear, while interacting with complex environments via muscular activity, surface contact, friction and hydrodynamics."
readme = "README.md"
authors = [
    {name = "GazzolaLab", email = "armant2@illinois.edu"},
    {name = "Seung Hyun Kim", email = "skim0119@gmail.com"},
]
license = "MIT"
repository = "https://github.com/GazzolaLab/PyElastica"
homepage = "https://www.cosseratrods.org/"
documentation = "https://docs.cosseratrods.org/en/latest/"

classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
]

requires-python = ">=3.10"

dependencies = [
    "numba",
    "numpy",
    "scipy",
    "tqdm",
    "matplotlib",
    "mypy",
    "mypy-extensions",
    "flake8",
    "cma",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["elastica"]

[tool.hatch.build.targets.sdist]
include = ["elastica"]

[project.optional-dependencies]
docs = [
    "sphinx>=6.1",
    "sphinx-book-theme>=1.0",
    "readthedocs-sphinx-search>=0.1.1,<0.4.0",
    "sphinx-autodoc-typehints>=1.21",
    "sphinxcontrib-mermaid>=0.9.2",
    "myst-parser>=1.0",
    "numpydoc>=1.3.1",
    "docutils>=0.18",
]
dev = [
    "black",
    "pytest",
    "coverage",
    "pre-commit",
    "pytest-html",
    "pytest-cov",
    "pytest-rng",
    "pytest-mock",
    "codecov",
    "click",
    "autoflake",
]

[tool.black]
# https://github.com/psf/black
target-version = ["py310"]
line-length = 88
color = true
exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.autoflake]
ignore-init-module-imports = true
ignore-pass-statements = true
ignore-pass-after-docstring = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = "3.10"
pretty = true
show_traceback = true
color_output = true
strict = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_unimported = true
disallow_any_generics = false
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
implicit_reexport = true
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = false
warn_unreachable = false
warn_unused_configs = true
warn_unused_ignores = false

exclude = [
    "elastica/experimental/*",
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Enable pragma
    "pragma: no cover",
    "TODO",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == __main__:",
    "pass",
    "def __repr__",
#"if self.debug:",
#"if settings.DEBUG",
    "from",
    "import",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    '''class '.*\bProtocol\)':''',
#''''@(abc\.)?'abstractmethod''',
]
fail_under = 40
show_missing = true

[tool.coverage.run]
branch = true
omit = [
    "*/.local/*",
	"setup.py",
    "elastica/experimental/*",
    "elastica/**/protocol.py",
]
